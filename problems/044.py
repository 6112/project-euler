#encoding=utf-8
## SOLVED 2020/04/1014
## 5482660

# Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten
# pentagonal numbers are:
# 
# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
# 
# It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70
# − 22 = 48, is not pentagonal.
# 
# Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
# difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of
# D?

import math

HIGHEST_PENTAGON_INDEX = 2500

def euler():
    # for each pentagon
    for i in range(1, HIGHEST_PENTAGON_INDEX):
        first_pentagon = p(i)
        # for each pentagon above this one
        for j in range(i, HIGHEST_PENTAGON_INDEX):
            second_pentagon = p(j)
            pentagon_sum = first_pentagon + second_pentagon
            pentagon_difference = second_pentagon - first_pentagon
            # check if it's our answer
            if is_pentagon(pentagon_sum) and is_pentagon(pentagon_difference):
               return pentagon_difference

def p(n):
    """Return the nth pentagonal number."""
    return n * (3 * n - 1) // 2

def is_pentagon(n):
    """Return true iff n is a pentagonal number."""
    x = (1 + math.sqrt(1 + 24 * n)) / 6
    return x == int(x)
